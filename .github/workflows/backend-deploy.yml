name: Deploy Backend to EC2 via CodeDeploy

on:
  push:
    paths:
      - 'backend/**'
  workflow_dispatch:


env:
  S3_BUCKET_NAME: my-websocket
  CODEDEPLOY_APPLICATION_NAME: WebSocketCodeDeploy
  CODEDEPLOY_DEPLOYMENT_GROUP_NAME: WebSocketCodeDeployGroup
  AWS_REGION: ap-northeast-2

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java and Gradle
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # 3. Gradle 빌드
      - name: Build with Gradle
        working-directory: backend
        run: ./gradlew clean build
      - name: Zip build result
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # 4. AWS CLI 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 5. 빌드 결과물 S3 업로드
      - name: Upload JAR to S3
        run: aws s3 cp --region ap-northeast-2 ./deployment.zip s3://${{ env.S3_BUCKET_NAME }}/application.zip

      # 6. EC2로 코드 배포
      - name: Deploy to EC2 via CodeDeploy
        run: aws deploy create-deployment --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} --deployment-group-name ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=application.zip,bundleType=zip
